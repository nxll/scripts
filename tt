#!/usr/bin/env bash
#COLORIZE TRANSPARENT IMAGE
#nxll <nxll@teknik.io>

#Requirments:
# * imagemagick
# * coreutils
# * hsetroot
# * sxiv (optional for -s)

# For use with images from here (https://www.transparenttextures.com/)
# However you could make your own so long as the background is transparent.

declare opt wall color img imgsize

opt=$1
wall="$HOME/.ttwall"
color=$(xrdb -query | awk '/*color8:/ {print $2}')

generate() {
	convert -size "$imgsize" xc:"$color" /tmp/colortile.png
	convert /tmp/colortile.png "$img" -gravity center -composite /tmp/wall.png

	rm /tmp/colortile.png
	hsetroot -tile /tmp/wall.png
}

usage() {
echo "
USAGE:
-f \$FILE_PATH
-s (mark and quit - requires sxiv)
-r reloads wallpaper from $wall
"
}

case $opt in
	-f)
		img=$2
		shift
		imgsize=$(identify -format '%wx%h' "$img")
		realpath "$img" > "$wall"
		generate
		;;
	-s)
		sxiv -tor "$HOME/images/tiles" > "$wall"
		img=$(< "$wall")
		imgsize=$(identify -format '%wx%h' "$img")
		generate
		;;
	-r)
		img=$(< "$wall")
		imgsize=$(identify -format '%wx%h' "$img")
		if [[ -f $wall ]]; then
			generate
		else
			usage
		fi
	;;
	-h) usage ;;
	*) usage ;;
esac
